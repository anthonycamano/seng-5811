--- enum types for each item
type pedestrianLight = enum {WAIT, WALK, FLASH};
type trafficLight =  enum {RED, AMBER, GREEN};
type buttonState = enum {RESET, SET};

-- adding the constraint that forces the toggle value to alternate between true and false.
node main(toggle: bool) returns (
    pedestrian_light: pedestrianLight;
    traffic_light: trafficLight;
    button_state: buttonState
);
var
    new_toggle: bool;

    new_pedestrian_light: pedestrianLight;
    new_traffic_light: trafficLight;
    new_button_state: buttonState;

    safety_prop,
    test_case_prop: bool;
let
    -- toggle for the {} cases and the only input
    assert(toggle ->  new_toggle);
    new_toggle  = (toggle <> pre toggle);

    -- Initial values and what gets returned
    pedestrian_light = WAIT -> new_pedestrian_light;
    traffic_light = RED -> new_traffic_light;
    button_state = RESET -> new_button_state;

    -- Transition logic for pedestrian_light
    new_pedestrian_light = if pre pedestrian_light = WAIT and pre traffic_light = RED and pre button_state = SET then WALK
        else if pre pedestrian_light = WAIT then WAIT
        else if pre pedestrian_light = WALK then
            if toggle = true then WALK
            else FLASH
        else if pre pedestrian_light = FLASH then 
            if toggle = true then FLASH
            else WAIT
        else pre pedestrian_light;

    -- Transition logic for traffic_light
    new_traffic_light = if pre traffic_light = RED and pre pedestrian_light = WAIT and pre button_state = RESET then GREEN
        else if pre traffic_light = RED then RED
        else if pre traffic_light = GREEN and pre button_state = SET then
            if toggle = true then GREEN
            else AMBER
        else if pre traffic_light = GREEN then GREEN
        else if pre traffic_light = AMBER then
            if toggle = true then AMBER
            else RED
        else pre traffic_light;

    -- Transition logic for button_state
    new_button_state = if pre button_state = SET and pre pedestrian_light = WALK then RESET
        else if pre button_state = SET then SET
        else if pre button_state = RESET and pre traffic_light = GREEN then
            if toggle = true then RESET
            else SET
        else if pre button_state = RESET then RESET
        else pre button_state;

    safety_prop = not (traffic_light = GREEN and pedestrian_light = WALK);
    --%PROPERTY safety_prop;

    test_case_prop = pedestrian_light <> FLASH;
    --%PROPERTY test_case_prop;
tel;